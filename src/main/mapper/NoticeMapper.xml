<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.da.sageassistantserver.dao.NoticeMapper">
  <!--Open L2 Cache under Names pace: 1 Hour-->
  <cache eviction="LRU" flushInterval="3600000" readOnly="true" size="1024" />
  <select id="findNewSOSince" resultType="com.da.sageassistantserver.model.TobeDelivery">
    SELECT DISTINCT IIF(SORDERQ.YSOQ_PJTORI_0='',SORDERQ.YSOH_PJT_0,SORDERQ.YSOQ_PJTORI_0) AS ProjectNO,
      SORDERQ.SOHNUM_0 AS OrderNO,
      (CASE WHEN SORDERQ.YSOQ_STA_0 =1 THEN SORDER.SOHTYP_0 + '-Methods'
      WHEN SORDERQ.YSOQ_STA_0 =2 THEN SORDER.SOHTYP_0 + '-InteralProd'
      WHEN SORDERQ.YSOQ_STA_0 =3 THEN SORDER.SOHTYP_0 + '-ExternalProd'
      WHEN SORDERQ.YSOQ_STA_0 =4 THEN SORDER.SOHTYP_0 + '-Design'
      WHEN SORDERQ.YSOQ_STA_0 =5 THEN SORDER.SOHTYP_0 + '-Stock'
      WHEN SORDERQ.YSOQ_STA_0 =6 THEN SORDER.SOHTYP_0 + '-Trading'
      WHEN SORDERQ.YSOQ_STA_0 =7 THEN SORDER.SOHTYP_0 + '-Services'
      WHEN SORDERQ.YSOQ_STA_0 =8 THEN SORDER.SOHTYP_0 + '-SalesAdmin'
      ELSE SORDER.SOHTYP_0 + '-UNK' END) AS OrderType,
      SORDERP.ITMREF_0 AS PN,
      SORDERP.ITMDES_0 AS Description,
      SORDERQ.QTY_0 AS QTY,
      SORDERP.NETPRI_0 AS NetPrice,      --- change from NETPRI_0 to NETPRIATI_0
      SORDER.CUR_0 AS Currency,
      SORDER.BPCORD_0 AS CustomerCode,
      SORDER.BPCNAM_0 AS CustomerName,
      SORDER.ORDDAT_0 AS OrderDate,
      SORDERQ.DEMDLVDAT_0 AS RequestDate,
      SORDERQ.YSOQ_DLIVP_0 AS PlanedDate
    FROM EXPLOIT.SORDERQ AS SORDERQ
    INNER JOIN EXPLOIT.SORDERP AS SORDERP
      ON SORDERP.SOHNUM_0 = SORDERQ.SOHNUM_0
        AND SORDERP.SOPLIN_0 = SORDERQ.SOPLIN_0
        AND SORDERQ.SALFCY_0 = #{Site}
        AND SORDERP.SALFCY_0 = #{Site}
        AND SORDERP.CREDATTIM_0 &gt;= CONVERT(datetime, #{Since}, 120)      --- add since
        AND SORDERQ.SOQSTA_0 != 3
    INNER JOIN EXPLOIT.SORDER SORDER
      ON SORDERP.SOHNUM_0 = SORDER.SOHNUM_0
          AND SORDER.SALFCY_0 = #{Site}
    ORDER BY SORDERQ.DEMDLVDAT_0 ASC
  </select>
  <select id="findTobeDealWithOrderLines" resultType="com.da.sageassistantserver.model.TobeDealWithOrderLine">
    SELECT DISTINCT
      SORDERP.SOHNUM_0 AS SalesOrderNO,
      SORDER.SOHTYP_0 AS OrderType,
      SORDERP.ITMREF_0 AS PN,
      SORDERP.ITMDES_0 AS Description,
      SORDERQ.QTY_0 AS QTY,
      SORDERP.SAU_0 AS Unit,
      SORDER.BPCORD_0 AS CustomerCode,
      SORDER.BPCNAM_0 AS CustomerName,
      SORDERQ.ORDDAT_0 AS OrderDate,
      SORDERQ.DEMDLVDAT_0 AS DemandDate, IIF(SORDERQ.YSOQ_PJTORI_0='',SORDERQ.YSOH_PJT_0,SORDERQ.YSOQ_PJTORI_0) AS ProjectNO,
      (CASE WHEN SORDERQ.YSOQ_STA_0 =1 THEN 'Methods'
      WHEN SORDERQ.YSOQ_STA_0 =2 THEN 'InteralProd'
      WHEN SORDERQ.YSOQ_STA_0 =3 THEN 'ExternalProd'
      WHEN SORDERQ.YSOQ_STA_0 =4 THEN 'Design'
      WHEN SORDERQ.YSOQ_STA_0 =5 THEN 'Stock'
      WHEN SORDERQ.YSOQ_STA_0 =6 THEN 'Trading'
      WHEN SORDERQ.YSOQ_STA_0 =7 THEN 'Services'
      WHEN SORDERQ.YSOQ_STA_0 =8 THEN 'SalesAdmin'
      ELSE 'UNK' END) AS OrderCategory
    FROM EXPLOIT.SORDERP AS SORDERP
    INNER JOIN EXPLOIT.SORDERQ AS SORDERQ
      ON SORDERP.SOHNUM_0 = SORDERQ.SOHNUM_0
        AND SORDERP.SOPLIN_0 = SORDERQ.SOPLIN_0
        AND SORDERP.SALFCY_0 = #{Site}
        AND SORDERQ.SALFCY_0 = #{Site} 
        AND SORDERQ.ORDDAT_0 &gt;= DATEADD(day, #{DiffDaysStart}, GETDATE())    ---- add diffDays
        AND SORDERQ.ORDDAT_0 &lt; DATEADD(day, #{DiffDaysEnd}, GETDATE())    ---- add diffDays
        AND SORDERQ.SOQSTA_0 != 3
        AND SORDERQ.SOQSTA_0 != 8
    INNER JOIN EXPLOIT.SORDER AS SORDER
      ON SORDERP.SOHNUM_0 = SORDER.SOHNUM_0
        AND SORDER.SALFCY_0 = #{Site}
        AND SORDER.SOHTYP_0 != 'LOC'
    LEFT JOIN EXPLOIT.MFGITM MFGITM
      ON MFGITM.PJT_0 = SORDERQ.YSOH_PJT_0
         AND MFGITM.MFGFCY_0 = #{Site}
      LEFT JOIN EXPLOIT.MFGITM MFGITM2
        ON MFGITM2.PJT_0 = SORDERQ.YSOQ_PJTORI_0
         AND MFGITM2.MFGFCY_0 = #{Site}
         AND SORDERQ.YSOQ_PJTORI_0 !=''
    LEFT JOIN EXPLOIT.PORDERP PORDERP
         ON PORDERP.PJT_0 = SORDERQ.YSOH_PJT_0
            AND PORDERP.PRHFCY_0 = #{Site}
    LEFT JOIN EXPLOIT.PORDERP PORDERP2
         ON PORDERP2.PJT_0 = SORDERQ.YSOQ_PJTORI_0
            AND PORDERP2.PRHFCY_0 = #{Site}
          AND SORDERQ.YSOQ_PJTORI_0 !=''
    WHERE
      MFGITM.MFGNUM_0 IS NULL
      AND PORDERP.POHNUM_0 IS NULL
      AND MFGITM2.MFGNUM_0 IS NULL
      AND PORDERP2.POHNUM_0 IS NULL
    ORDER BY SORDERQ.ORDDAT_0 ASC
  </select>
  <select id="findTobePurchaseBom" resultType="com.da.sageassistantserver.model.TobePurchaseBom">
    SELECT DISTINCT
      MFGITM.PJT_0 AS ProjectNO,
      SORDER.SOHTYP_0 AS OrderType,
      SORDER.BPCORD_0 AS CustomerCode,
      SORDER.BPCNAM_0 AS CustomerName,
      MFGITM.ITMREF_0 AS ForPN,
      MFGMAT.MFGNUM_0 AS WorkOrderNO,
      MFGMAT.BOMSEQ_0 AS BomSeq,
      MFGMAT.ITMREF_0 AS PN,
      CONCAT(ITMMASTER.ITMDES1_0,ITMMASTER.ITMDES2_0,ITMMASTER.ITMDES3_0) AS Description,
      MFGMAT.RETQTY_0 AS QTY,
      MFGMAT.BOMUOM_0 AS Unit,
      MFGMAT.SHTQTY_0 AS ShortQty,
      MFGMAT.ALLQTY_0 AS AllQty,
      MFGMAT.CREDAT_0 AS CreateDate
    FROM EXPLOIT.MFGMAT AS MFGMAT
    INNER JOIN EXPLOIT.MFGITM AS MFGITM
         ON MFGITM.MFGNUM_0 = MFGMAT.MFGNUM_0
          AND MFGITM.MFGLIN_0 = MFGMAT.MFGLIN_0
          AND MFGMAT.SHTQTY_0 &gt; 0
          AND MFGMAT.CREDATTIM_0 &gt;= DATEADD(day, #{DiffDaysStart}, GETDATE())    ---- add diffDays
          AND MFGMAT.CREDATTIM_0 &lt; DATEADD(day, #{DiffDaysEnd}, GETDATE())    ---- add diffDays
          AND MFGITM.MFGFCY_0 = #{Site}
          AND MFGMAT.MFGFCY_0 = #{Site}
    LEFT JOIN EXPLOIT.ITMMASTER AS ITMMASTER
         ON MFGMAT.ITMREF_0 = ITMMASTER.ITMREF_0
    LEFT JOIN EXPLOIT.SORDERQ AS SORDERQ
         ON SORDERQ.YSOH_PJT_0 = MFGITM.PJT_0
         AND SORDERQ.SALFCY_0 = #{Site}
    LEFT JOIN EXPLOIT.SORDER AS SORDER
         ON SORDERQ.SOHNUM_0 = SORDER.SOHNUM_0
         AND SORDER.SALFCY_0  = #{Site}
    LEFT JOIN EXPLOIT.PORDERP AS PORDERP
          ON PORDERP.PJT_0 = MFGITM.PJT_0
          AND PORDERP.ITMREF_0 = MFGMAT.ITMREF_0
          AND PORDERP.PRHFCY_0 = #{Site}
    WHERE  PORDERP.POHNUM_0 IS NULL
    ORDER BY MFGMAT.CREDAT_0  ASC
  </select>
  <select id="findNoAckDatePO" resultType="com.da.sageassistantserver.model.TobeReceive">
    SELECT DISTINCT
      PORDERP.POHNUM_0 AS PurchaseNO,
      PORDERP.POPLIN_0 AS Line,
      PORDERP.PJT_0 AS ProjectNO,
      PORDERP.ITMREF_0 AS PN,
      PORDERP.ITMDES_0 AS Description,
      PORDER.CUR_0 AS Currency,
      PORDERP.NETPRI_0 AS NetPrice,
      PORDERQ.QTYPUU_0 AS QTY,
      PORDERQ.PUU_0 AS Unit,
      PORDER.BPSNUM_0 AS VendorCode,
      PORDER.BPRNAM_0 AS VendorName,
      PORDERQ.EXTRCPDAT_0 AS ExpectDate,
      PORDER.ORDDAT_0 AS OrderDate,
      PORDER.CREUSR_0 AS CreateUser
    FROM  EXPLOIT.PORDERP AS PORDERP
    INNER JOIN EXPLOIT.PORDERQ AS PORDERQ
      ON PORDERP.POHNUM_0=PORDERQ.POHNUM_0
        AND PORDERP.POPLIN_0=PORDERQ.POPLIN_0
        AND PORDERQ.PRHFCY_0 = #{Site}
        AND PORDERP.PRHFCY_0 = #{Site}
        AND PORDERQ.LINCLEFLG_0 != 2
    INNER JOIN EXPLOIT.PORDER AS PORDER
      ON PORDERP.POHNUM_0=PORDER.POHNUM_0
        AND PORDER.POHFCY_0 = #{Site}
    WHERE
      PORDERQ.LINOCNDAT_0 ='1753-01-01'           ---  no AckDate
    ORDER BY PORDER.ORDDAT_0 ASC
  </select>
  <select id="findLongTimeNoReceive" resultType="com.da.sageassistantserver.model.TobeReceive">
    SELECT DISTINCT
      PORDERP.POHNUM_0 AS PurchaseNO,
      PORDERP.POPLIN_0 AS Line,
      PORDERP.PJT_0 AS ProjectNO,
      PORDERP.ITMREF_0 AS PN,
      PORDERP.ITMDES_0 AS Description,
      PORDER.CUR_0 AS Currency,
      PORDERP.NETPRI_0 AS NetPrice,
      PORDERQ.QTYPUU_0 AS QTY,
      PORDERQ.PUU_0 AS Unit,
      PORDER.BPSNUM_0 AS VendorCode,
      PORDER.BPRNAM_0 AS VendorName,
      IIF(PORDERQ.LINOCNDAT_0='1753-01-01', PORDERQ.EXTRCPDAT_0, PORDERQ.LINOCNDAT_0) AS AckDate,
      PORDERQ.EXTRCPDAT_0 AS ExpectDate,
      PORDER.ORDDAT_0 AS OrderDate,
      PORDER.CREUSR_0 AS CreateUser
    FROM  EXPLOIT.PORDERP AS PORDERP
    INNER JOIN EXPLOIT.PORDERQ AS PORDERQ
      ON PORDERP.POHNUM_0=PORDERQ.POHNUM_0
        AND PORDERP.POPLIN_0=PORDERQ.POPLIN_0
        AND PORDERQ.PRHFCY_0 = #{Site}
        AND PORDERP.PRHFCY_0 = #{Site}
        AND PORDERQ.LINCLEFLG_0 != 2
        AND PORDERQ.EXTRCPDAT_0 &lt;  GETDATE()   --- after ExpectDate
    INNER JOIN EXPLOIT.PORDER AS PORDER
      ON PORDERP.POHNUM_0=PORDER.POHNUM_0
          AND PORDER.ORDDAT_0 &gt;= DATEADD(day, #{DiffDaysStart}, GETDATE())    --- add diffDays
          AND PORDER.ORDDAT_0 &lt; DATEADD(day, #{DiffDaysEnd}, GETDATE())    --- add diffDays
        AND PORDER.POHFCY_0 = #{Site}
    ORDER BY PORDERQ.EXTRCPDAT_0 ASC
  </select>
  <select id="findLongTimeNoInvoice" resultType="com.da.sageassistantserver.model.TobeInvoice">
  SELECT
      PRECEIPTD.POHNUM_0 AS PurchaseNO,
      PRECEIPTD.POPLIN_0 AS PurchaseLine,
      PORDERP.CREDAT_0 AS PurchaseDate,
      PORDERP.CREUSR_0 AS Purchaser,
      PRECEIPTD.PJT_0 AS ProjectNO,
      PRECEIPTD.ITMREF_0 AS PN,
      PRECEIPTD.ITMDES1_0 + PRECEIPTD.ITMDES2_0 AS Description,
      PRECEIPTD.QTYSTU_0 AS Qty,
      PRECEIPTD.STU_0 AS Unit,
      PRECEIPTD.CPRPRI_0 AS Price,
      PRECEIPTD.CPRCUR_0 AS Currency,
      PRECEIPTD.PTHNUM_0 AS ReceiveNO,
      PRECEIPTD.PTDLIN_0 AS ReceiveLine,
      PRECEIPTD.RCPDAT_0 AS ReceiveDate,
      PRECEIPTD.CREUSR_0 AS Receiptor,
      PRECEIPT.BPSNUM_0 AS VendorCode,
      PRECEIPT.BPONAM_0 AS VendorName
    FROM EXPLOIT.PRECEIPTD PRECEIPTD
        INNER JOIN EXPLOIT.PRECEIPT PRECEIPT
          ON PRECEIPT.PTHNUM_0 = PRECEIPTD.PTHNUM_0
        INNER JOIN EXPLOIT.PORDERP PORDERP
          ON PRECEIPTD.POHNUM_0 =PORDERP.POHNUM_0 AND PRECEIPTD.POPLIN_0 = PORDERP.POPLIN_0
    WHERE PRECEIPTD.LININVFLG_0 = 1
      AND PRECEIPTD.YPTD_NC_0 != 1                                      --- exclude manual marked nc
      AND LEFT(PRECEIPTD.ITMREF_0,4) != 'PNOG'                          --- exclude PNOG
      AND PRECEIPTD.RCPDAT_0 &gt;=  DATEADD(DAY, #{DiffDaysStart}, GETDATE())
      AND PRECEIPTD.RCPDAT_0 &lt;  DATEADD(DAY, #{DiffDaysEnd}, GETDATE())
      AND PRECEIPTD.PRHFCY_0 = #{Site}
    ORDER BY PRECEIPTD.RCPDAT_0 ASC
  </select>
  <select id="findLongTimeNC" resultType="com.da.sageassistantserver.model.LongTimeNC">
  WITH T0 AS (  -- find open project
    SELECT DISTINCT
        SORDERQ.YSOH_PJT_0 AS ProjectNO,
        SORDERQ.YSOQ_PJTORI_0 AS ProjectOriNO
    FROM EXPLOIT.SORDERQ AS SORDERQ
      WHERE SORDERQ.SALFCY_0 = #{Site}
        AND SORDERQ.SOQSTA_0 != 3
    ),
    T1 AS (   -- find NC project
      SELECT
        SERREQUEST.YORIPJT_0,
        SERREQUEST.CREDAT_0
      FROM
      T0 INNER JOIN EXPLOIT.SERREQUEST SERREQUEST
      ON ( T0.ProjectNO = SERREQUEST.YORIPJT_0 OR T0.ProjectOriNO = SERREQUEST.YORIPJT_0 )
          AND SERREQUEST.YORIPJT_0 != ''
      AND SERREQUEST.SALFCY_0 = #{Site}
    ),
    T2 AS (
    SELECT DISTINCT
        PORDERP.POHNUM_0 AS PurchaseNO,
        PORDERP.POPLIN_0 AS Line,
        PORDERP.PJT_0 AS ProjectNO,
        PORDERP.ITMREF_0 AS PN,
        PORDERP.ITMDES_0 AS Description,
        PORDER.CUR_0 AS Currency,
        PORDERP.NETPRI_0 AS NetPrice,
        PORDERQ.QTYPUU_0 AS QTY,
        PORDERQ.PUU_0 AS Unit,
        PORDER.BPSNUM_0 AS VendorCode,
        PORDER.BPRNAM_0 AS VendorName,
        T1.CREDAT_0 AS FirstNCDate,
        PORDER.ORDDAT_0 AS OrderDate,
        PORDER.CREUSR_0 AS CreateUser
      FROM  T1
          INNER JOIN EXPLOIT.PORDERP AS PORDERP
              ON T1.YORIPJT_0 = PORDERP.PJT_0
      INNER JOIN EXPLOIT.PORDERQ AS PORDERQ
        ON PORDERP.POHNUM_0=PORDERQ.POHNUM_0
          AND PORDERP.POPLIN_0=PORDERQ.POPLIN_0
          AND PORDERQ.PRHFCY_0 = #{Site}
          AND PORDERP.PRHFCY_0 = #{Site}
      INNER JOIN EXPLOIT.PORDER AS PORDER
        ON PORDERP.POHNUM_0 = PORDER.POHNUM_0
          AND PORDER.POHFCY_0 = #{Site}
      WHERE PORDERP.ITMREF_0 LIKE 'PNOG%'      -- only PNOG
            AND T1.CREDAT_0 &gt;=  DATEADD(DAY, #{DiffDaysStart}, GETDATE())
            AND T1.CREDAT_0 &lt;  DATEADD(DAY, #{DiffDaysEnd}, GETDATE())
    )

  SELECT * FROM T2
  ORDER BY T2.FirstNCDate ASC
  </select>
  <select id="findLongTimeNoQC" resultType="com.da.sageassistantserver.model.LongTimeNoQC">
  WITH T0 AS (  -- find open project
    SELECT DISTINCT
        SORDERQ.YSOH_PJT_0 AS ProjectNO,
        SORDERQ.YSOQ_PJTORI_0 AS ProjectOriNO
    FROM EXPLOIT.SORDERQ AS SORDERQ
      WHERE SORDERQ.SALFCY_0 =  #{Site}
        AND SORDERQ.SOQSTA_0 != 3
    ),
    T1 AS (   -- find open porject receive
      SELECT
        PRECEIPTD.PJT_0,
        PRECEIPTD.CREDAT_0,
        PRECEIPTD.CREUSR_0
      FROM
      T0 INNER JOIN EXPLOIT.PRECEIPTD PRECEIPTD
      ON ( T0.ProjectNO = PRECEIPTD.PJT_0 OR T0.ProjectOriNO = PRECEIPTD.PJT_0 )
          AND PRECEIPTD.PJT_0 != ''
          AND PRECEIPTD.ITMREF_0 LIKE 'PNOG%'
      AND PRECEIPTD.PRHFCY_0 =  #{Site}
    ),
    T2 AS (
    SELECT DISTINCT
        PORDERP.POHNUM_0 AS PurchaseNO,
        PORDERP.POPLIN_0 AS Line,
        PORDERP.PJT_0 AS ProjectNO,
        PORDERP.ITMREF_0 AS PN,
        PORDERP.ITMDES_0 AS Description,
        PORDER.CUR_0 AS Currency,
        PORDERP.NETPRI_0 AS NetPrice,
        PORDERQ.QTYPUU_0 AS QTY,
        PORDERQ.PUU_0 AS Unit,
        PORDER.BPSNUM_0 AS VendorCode,
        PORDER.BPRNAM_0 AS VendorName,
        PORDER.ORDDAT_0 AS OrderDate,
        PORDER.CREUSR_0 AS CreateUser,
        T1.CREDAT_0 AS ReceiptDate,
        T1.CREUSR_0 AS Receiptor
      FROM  T1
          INNER JOIN EXPLOIT.PORDERP AS PORDERP
              ON T1.PJT_0 = PORDERP.PJT_0
      INNER JOIN EXPLOIT.PORDERQ AS PORDERQ
        ON PORDERP.POHNUM_0=PORDERQ.POHNUM_0
          AND PORDERP.POPLIN_0=PORDERQ.POPLIN_0
          AND PORDERQ.PRHFCY_0 =  #{Site}
          AND PORDERP.PRHFCY_0 =  #{Site}
      INNER JOIN EXPLOIT.PORDER AS PORDER
        ON PORDERP.POHNUM_0 = PORDER.POHNUM_0
          AND PORDER.POHFCY_0 =  #{Site}
      LEFT JOIN EXPLOIT.SERREQUEST SERREQUEST
              ON T1.PJT_0 = SERREQUEST.YORIPJT_0
          WHERE
              PORDERP.ITMREF_0 LIKE 'PNOG%'
            AND SERREQUEST.YORIPJT_0 IS NULL
            AND T1.CREDAT_0 &gt;=  DATEADD(DAY, #{DiffDaysStart}, GETDATE())
            AND T1.CREDAT_0 &lt;  DATEADD(DAY, #{DiffDaysEnd}, GETDATE())
    )

  SELECT DISTINCT * FROM T2
  ORDER BY T2.ReceiptDate ASC
  </select>
  <select id="findWrongProjectPO" resultType="com.da.sageassistantserver.model.TobeReceive">
    WITH T0 AS (
      SELECT DISTINCT
        SORDERQ.YSOH_PJT_0 AS ProjectNO,
        SORDERQ.SOHNUM_0 AS OrderNO
      FROM EXPLOIT.SORDERQ SORDERQ
    ),
    T1 AS (
      SELECT DISTINCT
          PORDERP.POHNUM_0 AS PurchaseNO,
          PORDERP.POPLIN_0 AS Line,
          PORDERP.PJT_0 AS ProjectNO,
          PORDERP.ITMREF_0 AS PN,
          PORDERP.ITMDES_0 AS Description,
          PORDER.CUR_0 AS Currency,
          PORDERP.NETPRI_0 AS NetPrice,
          PORDERQ.QTYPUU_0 AS QTY,
          PORDERQ.PUU_0 AS Unit,
          PORDER.BPSNUM_0 AS VendorCode,
          PORDER.BPRNAM_0 AS VendorName,
          IIF(PORDERQ.LINOCNDAT_0='1753-01-01', PORDERQ.EXTRCPDAT_0, PORDERQ.LINOCNDAT_0) AS AckDate,
          PORDERQ.EXTRCPDAT_0 AS ExpectDate,
          PORDER.ORDDAT_0 AS OrderDate,
          PORDER.CREUSR_0 AS CreateUser
      FROM EXPLOIT.PORDERP PORDERP
            INNER JOIN EXPLOIT.PORDERQ AS PORDERQ
          ON PORDERP.POHNUM_0=PORDERQ.POHNUM_0
            AND PORDERP.POPLIN_0=PORDERQ.POPLIN_0
            AND PORDERQ.PRHFCY_0 = #{Site}
            AND PORDERP.PRHFCY_0 = #{Site}
            AND PORDERQ.LINCLEFLG_0 != 2
          INNER JOIN EXPLOIT.PORDER AS PORDER
          ON PORDERP.POHNUM_0=PORDER.POHNUM_0
      WHERE
        ( SUBSTRING(PORDERP.PJT_0,2,2) = 'CC'
          OR SUBSTRING(PORDERP.PJT_0,2,4) = 'DSRP'
        )
    )

    SELECT T1.*
    FROM T1
    LEFT JOIN T0
        ON T1.ProjectNO = T0.ProjectNO
    WHERE T0.OrderNO IS null
    ORDER BY T1.OrderDate ASC
  </select>
  <select id="mixPOProjectBetweenZHUAndYSH" resultType="com.da.sageassistantserver.model.MixPJTInPO">
  --- Only open po line
   WITH
    T0 AS (  -- find open PO of zhuhai
      SELECT DISTINCT
        PORDERP.PJT_0
      FROM
        EXPLOIT.PORDERP PORDERP
      INNER JOIN EXPLOIT.PORDERQ AS PORDERQ
        ON PORDERP.POHNUM_0=PORDERQ.POHNUM_0
            AND PORDERP.POPLIN_0=PORDERQ.POPLIN_0
            AND PORDERQ.LINCLEFLG_0 != 2
      WHERE
        PORDERP.PRHFCY_0 = 'ZHU'
    ),
    T1 AS (  -- find open PO of shanghai
    SELECT DISTINCT
        PORDERP.PJT_0
      FROM
        EXPLOIT.PORDERP PORDERP
      INNER JOIN EXPLOIT.PORDERQ AS PORDERQ
        ON PORDERP.POHNUM_0=PORDERQ.POHNUM_0
            AND PORDERP.POPLIN_0=PORDERQ.POPLIN_0
            AND PORDERQ.LINCLEFLG_0 != 2
      WHERE
        PORDERP.PRHFCY_0 = 'YSH'
    ),
    T2 AS (
      SELECT DISTINCT
        PORDERP.PJT_0
      FROM
        EXPLOIT.PORDERP PORDERP
      WHERE
        PORDERP.PRHFCY_0 = 'ZHU'
    ),
    T3 AS (
      SELECT DISTINCT
        PORDERP.PJT_0
      FROM
        EXPLOIT.PORDERP PORDERP
      WHERE
        PORDERP.PRHFCY_0 = 'YSH'
    ),
    T4 AS (
     SELECT DISTINCT
        T0.PJT_0
     FROM T0
     INNER JOIN T3
       ON T0.PJT_0 = T3.PJT_0

     UNION

     SELECT DISTINCT
        T1.PJT_0
     FROM T1
     INNER JOIN T2
       ON T1.PJT_0 = T2.PJT_0
    ),
    T5 AS (
    SELECT
      PORDERP.PJT_0,
      PORDERP.PRHFCY_0,
      PORDERP.POHNUM_0,
      PORDERP.POPLIN_0,
      PORDERP.ITMREF_0,
      PORDERP.CREUSR_0,
      PORDERP.CREDAT_0
    FROM T4
    INNER JOIN EXPLOIT.PORDERP PORDERP
        ON  T4.PJT_0 = PORDERP.PJT_0
                       AND LEFT(PORDERP.PRHFCY_0,1) != LEFT(PORDERP.PJT_0,1)
    INNER JOIN EXPLOIT.PORDERQ AS PORDERQ
        ON PORDERP.POHNUM_0=PORDERQ.POHNUM_0
            AND PORDERP.POPLIN_0=PORDERQ.POPLIN_0
            AND PORDERQ.LINCLEFLG_0 != 2
            AND (PORDERP.PRHFCY_0 = 'ZHU' OR PORDERP.PRHFCY_0 = 'YSH')
    )

    SELECT
      T5.PJT_0 AS ProjectNO,
      T5.POHNUM_0 AS PO,
      T5.POPLIN_0 AS Line,
      T5.ITMREF_0 AS PN,
      T5.CREUSR_0 AS CreateUser,
      T5.CREDAT_0 AS CreateDate
    FROM T5
    WHERE ((T5.PJT_0 = '956A7-240348' OR T5.PJT_0 = 'D71ST-230237') AND T5.PRHFCY_0 = 'ZHU')
         OR (T5.PJT_0 != '956A7-240348' AND T5.PJT_0 != 'D71ST-230237')
   --- temp inhabit this project ('956A7-240348', D71ST-230237) , when it closed, remove it
  </select>
  <select id="mixWOProjectBetweenZHUAndYSH" resultType="com.da.sageassistantserver.model.MixPJTInWO">
  WITH
  T0 AS (
    SELECT DISTINCT
    MFGITM.PJT_0
    FROM
    EXPLOIT.MFGITM AS MFGITM
    WHERE
    MFGITM.MFGFCY_0 = 'ZHU'
  ),
  T1 AS (
  SELECT DISTINCT
    MFGITM.PJT_0
    FROM
    EXPLOIT.MFGITM AS MFGITM
    WHERE
    MFGITM.MFGFCY_0 = 'YSH'
  ),
  T2 AS (
  SELECT DISTINCT
    T0.PJT_0
    FROM
    T0
    INNER JOIN T1
    ON T0.PJT_0 = T1.PJT_0
  )

  SELECT
     MFGITM.MFGNUM_0 AS WO,
     MFGITM.PJT_0 AS ProjectNO,
     MFGITM.ITMREF_0 AS PN,
     MFGITM.CREUSR_0 AS CreateUser,
     MFGITM.CREDAT_0 AS CreateDate
    FROM EXPLOIT.MFGITM AS MFGITM
    INNER JOIN T2
         ON MFGITM.PJT_0 = T2.PJT_0
         AND MFGITM.ITMSTA_0 != 3
  </select>
  <select id="duplicatedWO" resultType="java.lang.String">
  WITH T0 AS (  -- find open project
      SELECT DISTINCT
          SORDERQ.YSOH_PJT_0 AS ProjectNO,
          SORDERQ.YSOQ_PJTORI_0 AS ProjectOriNO,
          SORDERQ.QTY_0 AS SQTY
      FROM EXPLOIT.SORDERQ AS SORDERQ
        WHERE SORDERQ.SALFCY_0 = #{Site}
          AND SORDERQ.SOQSTA_0 != 3
      ),
      T1 AS (   -- find open porject receive
        SELECT
          MFGITM.PJT_0,
          MFGITM.MFGNUM_0,
          DENSE_RANK() OVER (PARTITION BY MFGITM.PJT_0 ORDER BY MFGITM.ROWID) AS SEQ,
          T0.SQTY,
          SUM(MFGITM.EXTQTY_0) OVER (PARTITION BY MFGITM.PJT_0) AS MQTY
        FROM
        T0 INNER JOIN EXPLOIT.MFGITM MFGITM
        ON ( T0.ProjectNO = MFGITM.PJT_0 OR T0.ProjectOriNO = MFGITM.PJT_0 )
        AND MFGITM.MFGFCY_0 = #{Site}
      )

    SELECT DISTINCT
    MFGITM.PJT_0 + ' ' + MFGITM.MFGNUM_0 + ' ' + MFGITM.CREUSR_0
    FROM T1
    INNER JOIN MFGITM
      ON MFGITM.PJT_0 = T1.PJT_0
    WHERE
      T1.SEQ != 1
      AND T1.MQTY &gt; T1.SQTY
  </select>
  <select id="findNewRASince" resultType="com.da.sageassistantserver.model.SuspectDuplicatedRA">
  SELECT DISTINCT
    PRECEIPTD.PJT_0 AS ProjectNO,
    PRECEIPTD.ITMREF_0 AS PN,
    PRECEIPTD.PTHNUM_0 AS ReceiptNO,
    PRECEIPTD.PTDLIN_0 AS ReceiptLine,
    PRECEIPTD.CREDAT_0 AS ReceiptDate,
    PRECEIPTD.POHNUM_0 AS PurchaseNO,
    PRECEIPTD.POPLIN_0 AS PurchaseLine,
    PRECEIPTD.CREUSR_0 AS Receiptor,
    PORDERP.CREDAT_0 AS PurchaseDate,
    PORDERP.CREUSR_0 AS Purchaser,
    PRECEIPTD.QTYSTU_0 AS ReceiptQty,
    PRECEIPTD.LINATIAMT_0 AS ReceiptAmount,
    PRECEIPTD.NETCUR_0 AS Currency,
      DENSE_RANK() OVER (PARTITION BY PRECEIPTD.PJT_0, PRECEIPTD.ITMREF_0 ORDER BY PRECEIPTD.ROWID ) AS Seq,
      SUM(PRECEIPTD.QTYSTU_0) OVER (PARTITION BY PRECEIPTD.ITMREF_0, PRECEIPTD.PJT_0 ) AS TotalReceiptQty
    FROM  EXPLOIT.PRECEIPTD AS PRECEIPTD
      LEFT JOIN EXPLOIT.PORDERP AS PORDERP
         ON PRECEIPTD.POHNUM_0 = PORDERP.POHNUM_0
       AND PRECEIPTD.POPLIN_0 = PORDERP.POPLIN_0
    WHERE
          PRECEIPTD.PRHFCY_0 = #{Site}
      AND PRECEIPTD.CREDATTIM_0 &gt;= CONVERT(DATETIME, #{Since}, 120)      --- add Since
      AND PORDERP.PRHFCY_0 = #{Site}
  </select>
  <select id="findLongTimeNoDelivery" resultType="com.da.sageassistantserver.model.TobeDelivery">
  SELECT DISTINCT
      IIF(SORDERQ.YSOQ_PJTORI_0='',SORDERQ.YSOH_PJT_0,SORDERQ.YSOQ_PJTORI_0) AS ProjectNO,
      SORDERQ.SOHNUM_0 AS OrderNO,
      (CASE WHEN SORDERQ.YSOQ_STA_0 =1 THEN SORDER.SOHTYP_0 + '-Methods'
      WHEN SORDERQ.YSOQ_STA_0 =2 THEN SORDER.SOHTYP_0 + '-InteralProd'
      WHEN SORDERQ.YSOQ_STA_0 =3 THEN SORDER.SOHTYP_0 + '-ExternalProd'
      WHEN SORDERQ.YSOQ_STA_0 =4 THEN SORDER.SOHTYP_0 + '-Design'
      WHEN SORDERQ.YSOQ_STA_0 =5 THEN SORDER.SOHTYP_0 + '-Stock'
      WHEN SORDERQ.YSOQ_STA_0 =6 THEN SORDER.SOHTYP_0 + '-Trading'
      WHEN SORDERQ.YSOQ_STA_0 =7 THEN SORDER.SOHTYP_0 + '-Services'
      WHEN SORDERQ.YSOQ_STA_0 =8 THEN SORDER.SOHTYP_0 + '-SalesAdmin'
      ELSE SORDER.SOHTYP_0 + '-UNK' END) AS OrderType,
      SORDERP.ITMREF_0 AS PN,
      SORDERP.ITMDES_0 AS Description,
      SORDERQ.QTY_0 AS QTY,
      SORDERP.NETPRI_0 AS NetPrice,
      SORDER.CUR_0 AS Currency,
      SORDER.BPCORD_0 AS CustomerCode,
      SORDER.BPCNAM_0 AS CustomerName,
      SORDER.ORDDAT_0 AS OrderDate,
      SORDERQ.DEMDLVDAT_0 AS RequestDate,
      SORDERQ.YSOQ_DLIVP_0 AS PlanedDate
    FROM EXPLOIT.SORDERQ AS SORDERQ
    INNER JOIN EXPLOIT.SORDERP AS SORDERP
      ON SORDERP.SOHNUM_0 = SORDERQ.SOHNUM_0
        AND SORDERP.SOPLIN_0 = SORDERQ.SOPLIN_0
        AND SORDERQ.SALFCY_0 = #{Site}
        AND SORDERP.SALFCY_0 = #{Site}
        AND SORDERQ.SOQSTA_0 != 3
    INNER JOIN EXPLOIT.SORDER SORDER
      ON SORDERP.SOHNUM_0 = SORDER.SOHNUM_0
          AND SORDER.SALFCY_0 = #{Site}
          AND SORDER.SOHTYP_0 != 'LOC'
    WHERE
      SORDERQ.DEMDLVDAT_0 &gt;= DATEADD(day, #{DiffDaysStart}, GETDATE())    ---- add diffDays
      AND SORDERQ.DEMDLVDAT_0 &lt; DATEADD(day, #{DiffDaysEnd}, GETDATE())    ---- add diffDays
    ORDER BY SORDERQ.DEMDLVDAT_0 ASC
  </select>
  <select id="findNOBomServiceOrder" resultType="com.da.sageassistantserver.model.TobeDealWithOrderLine">
      SELECT DISTINCT
      SORDERP.SOHNUM_0 AS SalesOrderNO,
      SORDER.SOHTYP_0 AS OrderType,
      SORDERP.ITMREF_0 AS PN,
      SORDERP.ITMDES_0 AS Description,
      SORDERQ.QTY_0 AS QTY,
      SORDERP.SAU_0 AS Unit,
      SORDER.BPCORD_0 AS CustomerCode,
      SORDER.BPCNAM_0 AS CustomerName,
      SORDERQ.ORDDAT_0 AS OrderDate,
      SORDERQ.DEMDLVDAT_0 AS DemandDate,
      IIF(SORDERQ.YSOQ_PJTORI_0='',SORDERQ.YSOH_PJT_0,SORDERQ.YSOQ_PJTORI_0) AS ProjectNO,
      (CASE WHEN SORDERQ.YSOQ_STA_0 =1 THEN 'Methods'
      WHEN SORDERQ.YSOQ_STA_0 =2 THEN 'InteralProd'
      WHEN SORDERQ.YSOQ_STA_0 =3 THEN 'ExternalProd'
      WHEN SORDERQ.YSOQ_STA_0 =4 THEN 'Design'
      WHEN SORDERQ.YSOQ_STA_0 =5 THEN 'Stock'
      WHEN SORDERQ.YSOQ_STA_0 =6 THEN 'Trading'
      WHEN SORDERQ.YSOQ_STA_0 =7 THEN 'Services'
      WHEN SORDERQ.YSOQ_STA_0 =8 THEN 'SalesAdmin'
      ELSE 'UNK' END) AS OrderCategory
    FROM EXPLOIT.SORDERP AS SORDERP
    INNER JOIN EXPLOIT.SORDERQ AS SORDERQ
      ON SORDERP.SOHNUM_0 = SORDERQ.SOHNUM_0
        AND SORDERP.SOPLIN_0 = SORDERQ.SOPLIN_0
        AND SORDERP.SALFCY_0 = #{Site}
        AND SORDERQ.SALFCY_0 = #{Site}
        AND SORDERQ.SOQSTA_0 != 3
        AND SORDERQ.SOQSTA_0 != 8
    INNER JOIN EXPLOIT.SORDER AS SORDER
      ON SORDERP.SOHNUM_0 = SORDER.SOHNUM_0
        AND SORDER.SALFCY_0 = #{Site}
    LEFT JOIN EXPLOIT.MFGITM MFGITM
      ON MFGITM.PJT_0 = SORDERQ.YSOH_PJT_0
         AND MFGITM.MFGFCY_0 = #{Site}
      LEFT JOIN EXPLOIT.MFGITM MFGITM2
        ON MFGITM2.PJT_0 = SORDERQ.YSOQ_PJTORI_0
         AND MFGITM2.MFGFCY_0 = #{Site}
         AND SORDERQ.YSOQ_PJTORI_0 !=''
    WHERE
      MFGITM.MFGNUM_0 IS NULL
      AND MFGITM2.MFGNUM_0 IS NULL
            AND SORDERP.SALFCY_0 &lt;&gt; 'HKG'                    ---- Not HKG
            AND SORDERQ.YSOQ_STA_0 =7                              ---- Services only
            AND SUBSTRING(SORDERQ.YSOH_PJT_0,2,4) = 'DSRP'         ---- DSRP only
    ORDER BY SORDERQ.ORDDAT_0 ASC
  </select>
  <select id="findPreAnalysesProjectProfit" resultType="com.da.sageassistantserver.model.ProjectProfit">
  WITH
  T00 AS (
    SELECT DISTINCT
      PORDERP.PJT_0
    FROM
      EXPLOIT.PORDERP PORDERP
    WHERE
      PORDERP.PRHFCY_0 = #{Site}
         AND (
            PORDERP.CREDATTIM_0 &gt; CONVERT(DATETIME, #{Since}, 120)
             OR PORDERP.UPDDATTIM_0 &gt;  CONVERT(DATETIME, #{Since}, 120)
         )
         AND RIGHT(PORDERP.PJT_0, 4) != '0001'
  ),
  T0 AS ( ---- Project sales line price include tax
    SELECT DISTINCT
      IIF(SORDERQ.YSOQ_PJTORI_0 = '', SORDERQ.YSOH_PJT_0, SORDERQ.YSOQ_PJTORI_0) AS ProjectNO,
      SORDERQ.SOHNUM_0,
      SORDERP.ITMREF_0,
      SORDERP.ITMDES_0,
      SORDERP.TSICOD_1,
      SORDERQ.QTY_0,
      SORDERP.NETPRIATI_0,
      SORDERP.NETPRIATI_0 * SORDERQ.QTY_0 AS ProjectSalesPrice,
      SORDERP.CREDAT_0
    FROM T00
      INNER JOIN EXPLOIT.SORDERQ SORDERQ
        ON (T00.PJT_0 = SORDERQ.YSOH_PJT_0 OR T00.PJT_0 = SORDERQ.YSOQ_PJTORI_0)
    INNER JOIN EXPLOIT.SORDERP SORDERP
        ON SORDERP.SOHNUM_0 = SORDERQ.SOHNUM_0
      AND SORDERP.SOPLIN_0 = SORDERQ.SOPLIN_0
      AND SORDERQ.SALFCY_0 = #{Site}
      AND SORDERP.SALFCY_0 = #{Site}
      AND SORDERP.NETPRIATI_0 &gt; 0
  ),
  T1 AS (
    SELECT
      T0.ProjectNO,
      T0.SOHNUM_0 AS OrderNO,
      T0.ITMREF_0 AS PN,
      T0.ITMDES_0 AS Description,
      T0.TSICOD_1 AS CategoryCode,
      T0.QTY_0 AS QTY,
      T0.CREDAT_0 AS OrderDate,
      SORDER.CUR_0 AS SalesCurrency,
      SORDER.CHGRAT_0 AS Rate,
      T0.ProjectSalesPrice,
      T0.ProjectSalesPrice * ( SORDER.ORDINVATIL_0 / SORDER.ORDINVATI_0) AS ProjectSalesLocalPrice
    FROM
      T0
    INNER JOIN EXPLOIT.SORDER SORDER
        ON T0.SOHNUM_0 = SORDER.SOHNUM_0
  ),
  T2 AS (
    SELECT DISTINCT
          PORDERP.PJT_0,
          PORDERQ.CPRCUR_0 AS LocalCurrency,
          Sum(PORDERQ.LINAMTCPR_0 + PORDERQ.AMTTAXLIN1_0 + PORDERQ.AMTTAXLIN2_0 + PORDERQ.AMTTAXLIN3_0) OVER (PARTITION BY PORDERP.PJT_0) AS ProjectLocalCost
    FROM T00
      INNER JOIN EXPLOIT.PORDERP AS PORDERP
          ON T00.PJT_0 = PORDERP.PJT_0
    INNER JOIN EXPLOIT.PORDERQ AS PORDERQ
          ON PORDERP.POHNUM_0 = PORDERQ.POHNUM_0
        AND PORDERP.POPLIN_0 = PORDERQ.POPLIN_0
    WHERE
      PORDERQ.PRHFCY_0 = #{Site}
      AND PORDERP.PRHFCY_0 = #{Site}
  )

  SELECT
    T1.*,
    T2.LocalCurrency,
    T2.ProjectLocalCost,
    T1.ProjectSalesLocalPrice - T2.ProjectLocalCost AS Profit
  FROM
    T1
  LEFT JOIN T2 ON T1.ProjectNO = T2.PJT_0
  WHERE
    T1.ProjectSalesLocalPrice / T2.ProjectLocalCost &lt; #{TargetRate}
  ORDER BY
    Profit ASC,
    T1.OrderDate DESC
  </select>
  <select id="findDuplicatedPOBySite" resultType="com.da.sageassistantserver.model.SuspectDuplicatedPO">
    WITH
    T0 AS (      -- find project with seq
        SELECT DISTINCT
          PORDERP.PJT_0,
          PORDERP.ITMREF_0,
          DENSE_RANK() OVER (PARTITION BY PORDERP.PJT_0, PORDERP.ITMREF_0 ORDER BY PORDERP.ROWID) AS SEQ
        FROM
          EXPLOIT.PORDERP AS PORDERP
        INNER JOIN EXPLOIT.PORDERQ PORDERQ
            ON PORDERP.POHNUM_0 = PORDERQ.POHNUM_0
            AND PORDERP.POPLIN_0 = PORDERQ.POPLIN_0
        LEFT JOIN EXPLOIT.TEXCLOB TEXCLOB_PO_LIN
            ON PORDERQ.LINTEX_0 = TEXCLOB_PO_LIN.CODE_0
        LEFT JOIN EXPLOIT.PRECEIPTD AS PRECEIPTD
            ON PRECEIPTD.POHNUM_0 = PORDERP.POHNUM_0
            AND PRECEIPTD.POPLIN_0 = PORDERP.POPLIN_0
        LEFT JOIN EXPLOIT.TEXCLOB TEXCLOB_PT_LIN
            ON PRECEIPTD.LINTEX_0 = TEXCLOB_PT_LIN.CODE_0
        WHERE
          PORDERP.PRHFCY_0 = #{Site}
        AND RIGHT(PORDERP.PJT_0, 4) != '0001'
        AND RIGHT(PORDERP.PJT_0, 8) != 'ZLOGISTIC'
        AND PORDERP.PJT_0 != 'TQUALITE'
        ---FACHDIV0001:   PURCHASE VARIOUS
        ---FACHTRADRTD:   INBOUND CUSTOM FEES
        ---FVENTRAAUT:    OUTBOUND SHIPMENT FEES
        ---FACHTRAAUT:    INBOUND SHIPMENT FEES
        AND PORDERP.ITMREF_0 NOT IN ('FACHDIV0001', 'FACHTRADRTD', 'FVENTRAAUT','FACHTRAAUT')
        ---WORD 'AGAIN'marking ignored
        AND TEXCLOB_PO_LIN.TEXTE_0 NOT LIKE '%AGAIN%'
        AND TEXCLOB_PT_LIN.TEXTE_0 NOT LIKE '%AGAIN%'
    ),
    T1 AS (    -- find project which has more than one seq
        SELECT DISTINCT
          T0.PJT_0,
          T0.ITMREF_0
        FROM
          T0
        WHERE
          T0.SEQ &gt; 1
    ),
    T2 AS (   -- find purchase line for sales order line
        SELECT DISTINCT
            PORDERP.PJT_0,
            PORDERP.ITMREF_0,
            PORDERP.POHNUM_0,
            PORDERP.POPLIN_0,
            PORDERP.CREDAT_0,
            PORDERP.CREDATTIM_0,
            PORDERQ.QTYSTU_0,
            PORDERQ.LINATIAMT_0,
            PORDERQ.NETCUR_0,
            PORDERP.CREUSR_0,
            DENSE_RANK() OVER (PARTITION BY PORDERP.PJT_0, PORDERP.ITMREF_0 ORDER BY PORDERP.ROWID ) AS SEQ,
            SUM(PORDERQ.QTYSTU_0) OVER (PARTITION BY PORDERP.ITMREF_0, PORDERP.PJT_0 ) AS PQTY,
            SORDERQ.QTYSTU_0 AS SQTY
        FROM  T1
        INNER JOIN EXPLOIT.PORDERP AS PORDERP
            ON T1.PJT_0 = PORDERP.PJT_0
            AND T1.ITMREF_0 = PORDERP.ITMREF_0
        INNER JOIN EXPLOIT.PORDERQ AS PORDERQ
            ON PORDERP.POHNUM_0 = PORDERQ.POHNUM_0
            AND PORDERP.POPLIN_0 = PORDERQ.POPLIN_0
        INNER JOIN EXPLOIT.SORDERQ SORDERQ
            ON (SORDERQ.YSOH_PJT_0 = T1.PJT_0 OR SORDERQ.YSOQ_PJTORI_0 = T1.PJT_0)
        WHERE
            PORDERP.PRHFCY_0 = #{Site}
        AND PORDERQ.PRHFCY_0 = #{Site}
        AND SORDERQ.SALFCY_0 = #{Site}
         AND SORDERQ.SOQSTA_0 != 3                   -- only open sales order
    ),
    T3 AS (    -- find purchase line for stock project
        SELECT DISTINCT
            PORDERP.PJT_0,
            PORDERP.ITMREF_0,
            PORDERP.POHNUM_0,
            PORDERP.POPLIN_0,
            PORDERP.CREDAT_0,
            PORDERP.CREDATTIM_0,
            PORDERQ.QTYSTU_0,
            PORDERQ.LINATIAMT_0,
            PORDERQ.NETCUR_0,
            PORDERP.CREUSR_0,
            DENSE_RANK() OVER (PARTITION BY PORDERP.PJT_0, PORDERP.ITMREF_0 ORDER BY PORDERP.ROWID ) AS SEQ,
            SUM(PORDERQ.QTYSTU_0) OVER (PARTITION BY PORDERP.ITMREF_0, PORDERP.PJT_0 ) AS PQTY,
            SUM(MFGITM.EXTQTY_0) OVER (PARTITION BY MFGITM.PJT_0 ) AS SQTY
        FROM  T1
        INNER JOIN EXPLOIT.PORDERP AS PORDERP
            ON T1.PJT_0 = PORDERP.PJT_0
            AND T1.ITMREF_0 = PORDERP.ITMREF_0
        INNER JOIN EXPLOIT.PORDERQ AS PORDERQ
            ON PORDERP.POHNUM_0 = PORDERQ.POHNUM_0
            AND PORDERP.POPLIN_0 = PORDERQ.POPLIN_0
        INNER JOIN EXPLOIT.MFGITM MFGITM
            ON MFGITM.PJT_0 = PORDERP.PJT_0
            AND MFGITM.MFGFCY_0 = #{Site}
            AND MFGITM.ITMSTA_0 !=3                         ---  Only open work order
        WHERE
            PORDERP.PRHFCY_0 = #{Site}
        AND PORDERQ.PRHFCY_0 = #{Site}
        AND (
            SUBSTRING(PORDERP.PJT_0,6,1) = '-'              --- ProjectNO is not Sales projectno
            OR SUBSTRING(PORDERP.PJT_0,7,1) = '-'
            OR SUBSTRING(PORDERP.PJT_0,8,1) = '-'
            )
    )

    SELECT
        T2.PJT_0 AS ProjectNO,
        T2.ITMREF_0 AS PN,
        T2.POHNUM_0 AS PurchaseNO,
        T2.POPLIN_0 AS PurchaseLine,
        T2.QTYSTU_0 AS PurchaseQty,
        T2.LINATIAMT_0 AS Cost,
        T2.NETCUR_0 AS Currency,
        T2.CREDAT_0 AS PurchaseDate,
        T2.PQTY AS TotalPurchaseQty,
        T2.SQTY  AS TotalSalesQty,
        T2.CREUSR_0 AS Purchaser,
        T2.SEQ AS Seq
    FROM
        T2
    INNER JOIN T2 AS T4
        ON T2.PJT_0 = T4.PJT_0
           AND T2.ITMREF_0 = T4.ITMREF_0
    WHERE
       T2.PQTY &gt; T2.SQTY      -- if total purchase Qty is less sales Qty, batch purchase, ignore it

    UNION

    SELECT
        T3.PJT_0 AS ProjectNO,
        T3.ITMREF_0 AS PN,
        T3.POHNUM_0 AS PurchaseNO,
        T3.POPLIN_0 AS PurchaseLine,
        T3.QTYSTU_0 AS PurchaseQty,
        T3.LINATIAMT_0 AS Cost,
        T3.NETCUR_0 AS Currency,
        T3.CREDAT_0 AS PurchaseDate,
        T3.PQTY AS TotalPurchaseQty,
        T3.SQTY  AS TotalSalesQty,
        T3.CREUSR_0 AS Purchaser,
        T3.SEQ AS Seq
    FROM
        T3
    INNER JOIN T3 AS T5
        ON T3.PJT_0 = T5.PJT_0
           AND T3.ITMREF_0 = T5.ITMREF_0
    WHERE
       T3.PQTY &gt; T3.SQTY       -- if total purchase Qty is less sales Qty, batch purchase, ignore it
  </select>
  <select id="findDuplicatedRABySite" resultType="com.da.sageassistantserver.model.SuspectDuplicatedRA">
  WITH
    T0 AS (    --- find project pn with seq
        SELECT DISTINCT
          PORDERP.PJT_0,
          PORDERP.ITMREF_0,
          DENSE_RANK() OVER (PARTITION BY PORDERP.PJT_0, PORDERP.ITMREF_0 ORDER BY PORDERP.ROWID) AS SEQ
        FROM
          EXPLOIT.PORDERP AS PORDERP
        INNER JOIN EXPLOIT.PORDERQ PORDERQ
            ON PORDERP.POHNUM_0 = PORDERQ.POHNUM_0
            AND PORDERP.POPLIN_0 = PORDERQ.POPLIN_0
        LEFT JOIN EXPLOIT.TEXCLOB TEXCLOB_PO_LIN
            ON PORDERQ.LINTEX_0 = TEXCLOB_PO_LIN.CODE_0
        LEFT JOIN EXPLOIT.PRECEIPTD AS PRECEIPTD
            ON PRECEIPTD.POHNUM_0 = PORDERP.POHNUM_0
            AND PRECEIPTD.POPLIN_0 = PORDERP.POPLIN_0
        LEFT JOIN EXPLOIT.TEXCLOB TEXCLOB_PT_LIN
            ON PRECEIPTD.LINTEX_0 = TEXCLOB_PT_LIN.CODE_0
        WHERE
          PORDERP.PRHFCY_0 = #{Site}
        AND RIGHT(PORDERP.PJT_0, 4) != '0001'
        AND RIGHT(PORDERP.PJT_0, 8) != 'ZLOGISTIC'
        AND PORDERP.PJT_0 != 'TQUALITE'
        ---FACHDIV0001:   PURCHASE VARIOUS
        ---FACHTRADRTD:   INBOUND CUSTOM FEES
        ---FVENTRAAUT:    OUTBOUND SHIPMENT FEES
        ---FACHTRAAUT:    INBOUND SHIPMENT FEES
        AND PORDERP.ITMREF_0 NOT IN ('FACHDIV0001', 'FACHTRADRTD', 'FVENTRAAUT','FACHTRAAUT')
        ---WORD 'AGAIN'marking ignored
        AND TEXCLOB_PO_LIN.TEXTE_0 NOT LIKE '%AGAIN%'
        AND TEXCLOB_PT_LIN.TEXTE_0 NOT LIKE '%AGAIN%'
  ),
  T1 AS (    --- find duplicate project which has more than one seq
    SELECT DISTINCT
      T0.PJT_0,
      T0.ITMREF_0
    FROM
      T0
    WHERE
      T0.SEQ &gt; 1
  ),
  T2 AS (    --- find for normal sales porjectNO
    SELECT DISTINCT
      PRECEIPTD.PJT_0,
      PRECEIPTD.ITMREF_0,
      PRECEIPTD.PTHNUM_0,
      PRECEIPTD.PTDLIN_0,
      PRECEIPTD.CREDAT_0 AS ReceiptDate,
      PRECEIPTD.POHNUM_0,
      PRECEIPTD.POPLIN_0,
      PRECEIPTD.CREUSR_0 AS Receiptor,
      PORDERP.CREDAT_0 AS PurchaseDate,
      PORDERP.CREUSR_0 AS Purchaser,
      PRECEIPTD.QTYSTU_0,
      PRECEIPTD.LINATIAMT_0,
      PRECEIPTD.NETCUR_0,
      DENSE_RANK() OVER (PARTITION BY PRECEIPTD.PJT_0, PRECEIPTD.ITMREF_0 ORDER BY PRECEIPTD.ROWID ) AS SEQ,
      SUM(PRECEIPTD.QTYSTU_0) OVER (PARTITION BY PRECEIPTD.ITMREF_0, PRECEIPTD.PJT_0 ) AS RQTY,
      SUM(PORDERQ.QTYSTU_0) OVER (PARTITION BY PRECEIPTD.ITMREF_0, PRECEIPTD.PJT_0 ) AS PQTY,
      SORDERQ.QTYSTU_0 AS SQTY
    FROM  T1
      INNER JOIN EXPLOIT.PRECEIPTD AS PRECEIPTD
        ON T1.PJT_0 = PRECEIPTD.PJT_0
           AND T1.ITMREF_0 = PRECEIPTD.ITMREF_0
      LEFT JOIN EXPLOIT.PORDERP AS PORDERP
         ON PRECEIPTD.POHNUM_0 = PORDERP.POHNUM_0
           AND PRECEIPTD.POPLIN_0 = PORDERP.POPLIN_0
      LEFT JOIN EXPLOIT.PORDERQ AS PORDERQ
         ON PRECEIPTD.POHNUM_0 = PORDERQ.POHNUM_0
           AND PRECEIPTD.POPLIN_0 = PORDERQ.POPLIN_0
      INNER JOIN EXPLOIT.SORDERQ SORDERQ
        ON (SORDERQ.YSOH_PJT_0 = T1.PJT_0 OR SORDERQ.YSOQ_PJTORI_0 = T1.PJT_0)
    WHERE
          PRECEIPTD.PRHFCY_0 = #{Site}
      AND PORDERP.PRHFCY_0 = #{Site}
      AND SORDERQ.SALFCY_0 = #{Site}
      AND SORDERQ.SOQSTA_0 != 3                   -- only open sales order
  ),
  T3 AS ( --- find for normal stock porjectNO
    SELECT DISTINCT
      PRECEIPTD.PJT_0,
      PRECEIPTD.ITMREF_0,
      PRECEIPTD.PTHNUM_0,
      PRECEIPTD.PTDLIN_0,
      PRECEIPTD.CREDAT_0 AS ReceiptDate,
      PRECEIPTD.POHNUM_0,
      PRECEIPTD.POPLIN_0,
      PRECEIPTD.CREUSR_0 AS Receiptor,
      PORDERP.CREDAT_0 AS PurchaseDate,
      PORDERP.CREUSR_0 AS Purchaser,
      PRECEIPTD.QTYSTU_0,
      PRECEIPTD.LINATIAMT_0,
      PRECEIPTD.NETCUR_0,
      DENSE_RANK() OVER (PARTITION BY PRECEIPTD.PJT_0, PRECEIPTD.ITMREF_0 ORDER BY PRECEIPTD.ROWID ) AS SEQ,
      SUM(PRECEIPTD.QTYSTU_0) OVER (PARTITION BY PRECEIPTD.ITMREF_0, PRECEIPTD.PJT_0 ) AS RQTY,
      SUM(PORDERQ.QTYSTU_0) OVER (PARTITION BY PRECEIPTD.ITMREF_0, PRECEIPTD.PJT_0 ) AS PQTY,
      SUM(MFGITM.EXTQTY_0) OVER (PARTITION BY MFGITM.PJT_0 )  AS SQTY
    FROM  T1
      INNER JOIN EXPLOIT.PRECEIPTD AS PRECEIPTD
        ON T1.PJT_0 = PRECEIPTD.PJT_0
           AND T1.ITMREF_0 = PRECEIPTD.ITMREF_0
      LEFT JOIN EXPLOIT.PORDERP AS PORDERP
         ON PRECEIPTD.POHNUM_0 = PORDERP.POHNUM_0
           AND PRECEIPTD.POPLIN_0 = PORDERP.POPLIN_0
      LEFT JOIN EXPLOIT.PORDERQ AS PORDERQ
         ON PRECEIPTD.POHNUM_0 = PORDERQ.POHNUM_0
           AND PRECEIPTD.POPLIN_0 = PORDERQ.POPLIN_0
      INNER JOIN EXPLOIT.MFGITM MFGITM
            ON MFGITM.PJT_0 = PORDERP.PJT_0
            AND MFGITM.MFGFCY_0 = #{Site}
            AND MFGITM.ITMSTA_0 !=3                         ---  Only open work order
    WHERE
          PRECEIPTD.PRHFCY_0 = #{Site}
      AND PORDERP.PRHFCY_0 = #{Site}
      AND (
         SUBSTRING(PRECEIPTD.PJT_0,6,1) = '-'            --- ProjectNO is not Sales projectno
         OR SUBSTRING(PRECEIPTD.PJT_0,7,1) = '-'
         OR SUBSTRING(PRECEIPTD.PJT_0,8,1) = '-'
         )
  )

  SELECT
      T2.PJT_0 AS ProjectNO,
      T2.ITMREF_0 AS PN,
      T2.PTHNUM_0 AS ReceiptNO,
      T2.PTDLIN_0 AS ReceiptLine,
      T2.ReceiptDate,
      T2.Receiptor,
      T2.POHNUM_0 AS PurchaseNO,
      T2.POPLIN_0 AS PurchaseLine,
      T2.PurchaseDate,
      T2.Purchaser,
      T2.QTYSTU_0 AS ReceiptQty,
      T2.LINATIAMT_0 AS ReceiptAmount,
      T2.NETCUR_0 AS Currency,
      T2.RQTY AS TotalReceiptQty,
      T2.PQTY AS TotalPurchaseQty,
      T2.SQTY AS TotalSalesQty,
      T2.SEQ AS Seq
  FROM
    T2
  INNER JOIN T2 AS T4
      ON T2.PJT_0 = T4.PJT_0
          AND T2.ITMREF_0 = T4.ITMREF_0
  WHERE T2.RQTY &gt; T2.SQTY    -- if total purchase Qty is less sales Qty, batch purchase, ignore it

  UNION

  SELECT
      T3.PJT_0 AS ProjectNO,
      T3.ITMREF_0 AS PN,
      T3.PTHNUM_0 AS ReceiptNO,
      T3.PTDLIN_0 AS ReceiptLine,
      T3.ReceiptDate,
      T3.Receiptor,
      T3.POHNUM_0 AS PurchaseNO,
      T3.POPLIN_0 AS PurchaseLine,
      T3.PurchaseDate,
      T3.Purchaser,
      T3.QTYSTU_0 AS ReceiptQty,
      T3.LINATIAMT_0 AS ReceiptAmount,
      T3.NETCUR_0 AS Currency,
      T3.RQTY AS TotalReceiptQty,
      T3.PQTY AS TotalPurchaseQty,
      T3.SQTY AS TotalSalesQty,
      T3.SEQ AS Seq
  FROM
    T3
  INNER JOIN T3 AS T5
      ON T3.PJT_0 = T5.PJT_0
          AND T3.ITMREF_0 = T5.ITMREF_0
      WHERE
        T3.RQTY &gt; T3.SQTY       -- if total purchase Qty is less sales Qty, batch purchase, ignore it
  </select>
</mapper>